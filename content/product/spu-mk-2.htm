<h1>SPU&nbsp;Mark&nbsp;II™</h1>
<img class="product-image" src="../img/spu-mk-ii.svg">

<p>SPU&nbsp;Mark&nbsp;II™ is a new generation of 16-bit CPUs tailored for low resource usage.</p>

<p>Contrary to most CPUs on the market, the SPU&nbsp;Mark&nbsp;II™ is a stack machine, providing benefits
  to both hardware implementors and programmers. It's as easy to write or compile code for the SPU&nbsp;Mark&nbsp;II™
  as it is to create a hardware realization of it.</p>

<p>Ashet&nbsp;Technologies™ is proud to provide you with this new technology and enables you to create new low power
  systems with an easy.</p>

<h2>Features</h2>

<ul>
  <li>Highly orthogonal instruction set</li>
  <li>Optimal utilization of the encoding space</li>
  <li>True 16 bit architecture</li>
  <li>Comes with a good bunch of companion IP cores for better integration</li>
</ul>

<h2>Documents &amp; Downloads</h2>

<h3>Documentation</h3>

<ul>
  <li><a
      href="https://github.com/MasterQ32/spu-mark-ii/blob/master/documentation/specs/spu-mark-ii.md#the-spu-mark-ii-architecture">Instruction
      Set Architecture Manual</a></li>
</ul>

<h3>Application Notes</h3>

<ul>
  <li><a
      href="https://github.com/MasterQ32/spu-mark-ii/blob/master/documentation/app-notes/AN000%20-%20Understanding%20the%20Instruction%20Set.md#an000---understanding-the-instruction-set">AN000
      - Understanding the Instruction Set</a></li>
  <li><a
      href="https://github.com/MasterQ32/spu-mark-ii/blob/master/documentation/app-notes/AN001%20-%20The%20SPU%20Assembly%20Language.md#an001---the-spu-assembly-language">AN001
      - The SPU Assembly Language</a></li>
  <li><a
      href="https://github.com/MasterQ32/spu-mark-ii/blob/master/documentation/app-notes/AN002%20-%20Standard%20Calling%20Convention.md#an002---standard-calling-convention">AN002
      - Standard Calling Convention</a></li>
  <li><a
      href="https://github.com/MasterQ32/spu-mark-ii/blob/master/documentation/app-notes/AN003%20-%20Writing%20efficient%20code.md#an003---writing-efficient-code">AN003
      - Writing efficient code</a></li>
</ul>

<h3>Software &amp; Sources</h3>

<ul>
  <li>Toolchain (x86_64-linux)<i>(soon)</i></li>
  <li>Toolchain (x86_64-windows)<i>(soon)</i></li>
  <li>Toolchain (x86_64-macos)<i>(soon)</i></li>
  <li>Toolchain (aarch64-linux)<i>(soon)</i></li>
  <li>Toolchain (arm-linux)<i>(soon)</i></li>
  <li><a href="https://github.com/MasterQ32/spu-mark-ii" target="_blank">Verilog Implementation and Toolchain
      Sources</a></li>
</ul>
